{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAM,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,2KAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,2KAAgB,QAGnC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/inventory/inventory-management.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useApp } from '@/hooks/use-app';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Trash2, Edit, Save } from 'lucide-react';\nimport type { InventoryItem } from '@/types';\n\nexport function InventoryManagement() {\n  const { t, inventoryItems, addInventoryItem, updateInventoryItem, removeInventoryItem } = useApp();\n  \n  const [newItemName, setNewItemName] = useState('');\n  const [newItemQuantity, setNewItemQuantity] = useState('');\n  const [newItemPrice, setNewItemPrice] = useState('');\n  \n  const [editingItemId, setEditingItemId] = useState<string | null>(null);\n  const [editedItemName, setEditedItemName] = useState('');\n  const [editedItemQuantity, setEditedItemQuantity] = useState('');\n  const [editedItemPrice, setEditedItemPrice] = useState('');\n\n  const handleAddItem = async () => {\n    if (newItemName && newItemQuantity && newItemPrice) {\n      await addInventoryItem({\n        name: newItemName,\n        quantity: parseInt(newItemQuantity, 10),\n        price: parseFloat(newItemPrice),\n      });\n      setNewItemName('');\n      setNewItemQuantity('');\n      setNewItemPrice('');\n    }\n  };\n\n  const handleEdit = (item: InventoryItem) => {\n    setEditingItemId(item.id);\n    setEditedItemName(item.name);\n    setEditedItemQuantity(item.quantity.toString());\n    setEditedItemPrice(item.price.toString());\n  };\n\n  const handleSave = async (id: string) => {\n    await updateInventoryItem(id, {\n      name: editedItemName,\n      quantity: parseInt(editedItemQuantity, 10),\n      price: parseFloat(editedItemPrice),\n    });\n    setEditingItemId(null);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{t('inventory-management-title')}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid gap-6\">\n          <div>\n            <h3 className=\"text-lg font-semibold mb-2\">{t('add-inventory-item-title')}</h3>\n            <div className=\"flex flex-col md:flex-row gap-2 mb-4\">\n              <Input\n                placeholder={t('item-name-placeholder')}\n                value={newItemName}\n                onChange={(e) => setNewItemName(e.target.value)}\n              />\n              <Input\n                type=\"number\"\n                placeholder={t('quantity-placeholder')}\n                value={newItemQuantity}\n                onChange={(e) => setNewItemQuantity(e.target.value)}\n              />\n              <Input\n                type=\"number\"\n                placeholder={t('price-placeholder')}\n                value={newItemPrice}\n                onChange={(e) => setNewItemPrice(e.target.value)}\n              />\n              <Button onClick={handleAddItem} className=\"md:w-auto\">{t('add-item-btn')}</Button>\n            </div>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-semibold mb-2\">{t('inventory-list-title')}</h3>\n            <div className=\"rounded-md border\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>{t('table-header-item')}</TableHead>\n                    <TableHead>{t('table-header-quantity')}</TableHead>\n                    <TableHead className=\"text-right\">{t('table-header-price')}</TableHead>\n                    <TableHead className=\"w-[100px]\">{t('actions-label')}</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {inventoryItems.length > 0 ? (\n                    inventoryItems.map((item) => (\n                      <TableRow key={item.id}>\n                        {editingItemId === item.id ? (\n                          <>\n                            <TableCell><Input value={editedItemName} onChange={(e) => setEditedItemName(e.target.value)} /></TableCell>\n                            <TableCell><Input type=\"number\" value={editedItemQuantity} onChange={(e) => setEditedItemQuantity(e.target.value)} /></TableCell>\n                            <TableCell className=\"text-right\"><Input type=\"number\" value={editedItemPrice} onChange={(e) => setEditedItemPrice(e.target.value)} /></TableCell>\n                            <TableCell>\n                              <Button variant=\"ghost\" size=\"icon\" onClick={() => handleSave(item.id)}><Save className=\"h-4 w-4\" /></Button>\n                            </TableCell>\n                          </>\n                        ) : (\n                          <>\n                            <TableCell>{item.name}</TableCell>\n                            <TableCell>{item.quantity}</TableCell>\n                            <TableCell className=\"text-right\">{item.price.toFixed(2)}</TableCell>\n                            <TableCell>\n                              <Button variant=\"ghost\" size=\"icon\" onClick={() => handleEdit(item)}><Edit className=\"h-4 w-4\" /></Button>\n                              <Button variant=\"ghost\" size=\"icon\" onClick={() => removeInventoryItem(item.id)}><Trash2 className=\"h-4 w-4\" /></Button>\n                            </TableCell>\n                          </>\n                        )}\n                      </TableRow>\n                    ))\n                  ) : (\n                    <TableRow>\n                      <TableCell colSpan={4} className=\"text-center\">{t('no-inventory-items-text')}</TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,6KAAoB;AAEnC,MAAM,gBAAgB,gLAAuB;AAE7C,MAAM,eAAe,+KAAsB;AAE3C,MAAM,cAAc,8KAAqB;AAEzC,MAAM,8BAAgB,2KAAgB,CAGpC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,gLAAuB;QACtB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,2KAAgB,OAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,gLAAuB;gBACtB,KAAK;gBACL,WAAW,IAAA,4HAAE,EACX,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,8KAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,oMAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,8KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,qDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,2KAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,oLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,YAAY,gLAAuB;AAEzC,MAAM,8BAAgB,2KAAgB,MAGpC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,gLAAuB;QACtB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,YAAY;QACzB,GAAG,KAAK;;;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B,MAAM,iCAAmB,2KAAgB,OAGvC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC,kLAAyB;QAAC,WAAU;kBACnC,cAAA,6LAAC,mLAA0B;YACzB,KAAK;YACL,WAAW,IAAA,4HAAE,EACX,gIACA;YAED,GAAG,KAAK;;gBAER;8BACD,6LAAC,sOAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,mLAA0B,CAAC,WAAW;AAErE,MAAM,iCAAmB,2KAAgB,OAGvC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC,mLAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,6LAAC;YAAI,WAAW,IAAA,4HAAE,EAAC,aAAa;sBAAa;;;;;;;;;;;;;AAIjD,iBAAiB,WAAW,GAAG,mLAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 865, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/settings-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useApp } from '@/hooks/use-app';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n  DialogDescription,\n} from '@/components/ui/dialog';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { LogOut, User, PlusCircle, Trash2 } from 'lucide-react';\nimport type { Language } from '@/lib/translations';\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';\n\ninterface SettingsDialogProps {\n  isOpen: boolean;\n  onOpenChange: (open: boolean) => void;\n}\n\nexport function SettingsDialog({ isOpen, onOpenChange }: SettingsDialogProps) {\n  const { t, language, setLanguage, logout, user, staff, addStaff, removeStaff } = useApp();\n  const [newStaffName, setNewStaffName] = useState('');\n  const [newStaffNameEn, setNewStaffNameEn] = useState('');\n\n  const handleAddStaff = () => {\n    if (newStaffName.trim() && newStaffNameEn.trim()) {\n      addStaff(newStaffName, newStaffNameEn);\n      setNewStaffName('');\n      setNewStaffNameEn('');\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[480px]\">\n        <DialogHeader>\n          <DialogTitle>{t('settings-title')}</DialogTitle>\n          {user?.email && (\n            <DialogDescription className=\"flex items-center gap-2 pt-2\">\n              <User className=\"h-4 w-4\" />\n              <span>{user.email}</span>\n            </DialogDescription>\n          )}\n        </DialogHeader>\n        <div className=\"space-y-6 py-4\">\n\n          <Accordion type=\"single\" collapsible className=\"w-full\" defaultValue='language'>\n             <AccordionItem value=\"language\">\n              <AccordionTrigger className=\"text-lg font-medium\">{t('language-settings-title')}</AccordionTrigger>\n              <AccordionContent>\n                <div className=\"space-y-2 pt-2\">\n                  <Label htmlFor=\"language-select\">{t('settings-language-label')}</Label>\n                  <Select value={language} onValueChange={(value) => setLanguage(value as Language)}>\n                    <SelectTrigger id=\"language-select\">\n                      <SelectValue placeholder={t('settings-language-label')} />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"ar\">{t('settings-arabic')}</SelectItem>\n                      <SelectItem value=\"en\">{t('settings-english')}</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </AccordionContent>\n            </AccordionItem>\n            \n            <AccordionItem value=\"staff-management\">\n              <AccordionTrigger className=\"text-lg font-medium\">{t('staff-management-title')}</AccordionTrigger>\n              <AccordionContent>\n                <div className=\"space-y-4 pt-2\">\n                  <div className=\"space-y-2\">\n                    <Label>{t('staff-list-label')}</Label>\n                    <div className=\"space-y-2 max-h-40 overflow-y-auto rounded-md border p-2\">\n                      {staff.length > 0 ? (\n                        staff.map(s => (\n                          <div key={s.id} className=\"flex items-center justify-between gap-2 p-1 rounded-md hover:bg-muted\">\n                            <span>{language === 'ar' ? s.name : s.nameEn}</span>\n                            <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7 text-destructive\" onClick={() => removeStaff(s.id)}>\n                              <Trash2 className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        ))\n                      ) : (\n                        <p className=\"text-sm text-muted-foreground p-2\">{t('no-staff-text')}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-3 rounded-md border p-4\">\n                    <h4 className=\"font-medium\">{t('add-staff-member-title')}</h4>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"new-staff-name-ar\">{t('staff-name-ar-label')}</Label>\n                        <Input \n                          id=\"new-staff-name-ar\"\n                          value={newStaffName}\n                          onChange={(e) => setNewStaffName(e.target.value)}\n                          placeholder={t('name-in-arabic-placeholder')}\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"new-staff-name-en\">{t('staff-name-en-label')}</Label>\n                        <Input \n                          id=\"new-staff-name-en\"\n                          value={newStaffNameEn}\n                          onChange={(e) => setNewStaffNameEn(e.target.value)}\n                          placeholder={t('name-in-english-placeholder')}\n                        />\n                      </div>\n                    </div>\n                    <Button onClick={handleAddStaff} className=\"w-full\">\n                      <PlusCircle />\n                      {t('add-staff-btn')}\n                    </Button>\n                  </div>\n                </div>\n              </AccordionContent>\n            </AccordionItem>\n          </Accordion>\n        </div>\n        <DialogFooter>\n          <Button variant=\"outline\" className=\"w-full\" onClick={logout}>\n            <LogOut className=\"h-4 w-4\" />\n            <span>{t('logout-text')}</span>\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1307, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/header.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { Settings } from 'lucide-react';\nimport { useApp } from '@/hooks/use-app';\nimport { Button } from '@/components/ui/button';\nimport { SettingsDialog } from '@/components/settings-dialog';\nimport { LanguageSwitcher } from './language-switcher';\n\nexport function Header() {\n  const { t } = useApp();\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n\n  return (\n    <>\n      <header className=\"sticky top-0 z-10 bg-card/80 backdrop-blur-sm shadow-sm\">\n        <div className=\"container mx-auto flex items-center justify-between p-4\">\n          <div className=\"flex items-center gap-6\">\n            <nav className=\"flex items-center gap-4\">\n              <Link href=\"/new-service\" className=\"text-sm font-medium text-muted-foreground transition-colors hover:text-primary\">\n                {t('new-service')}\n              </Link>\n              <Link href=\"/dashboard\" className=\"text-sm font-medium text-muted-foreground transition-colors hover:text-primary\">\n                {t('dashboard')}\n              </Link>\n              <Link href=\"/inventory\" className=\"text-sm font-medium text-muted-foreground transition-colors hover:text-primary\">\n                {t('inventory-and-expenses')}\n              </Link>\n            </nav>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <LanguageSwitcher />\n            <Button variant=\"ghost\" size=\"icon\" onClick={() => setIsSettingsOpen(true)}>\n              <Settings className=\"h-5 w-5\" />\n              <span className=\"sr-only\">{t('settings-title')}</span>\n            </Button>\n          </div>\n        </div>\n      </header>\n      <SettingsDialog isOpen={isSettingsOpen} onOpenChange={setIsSettingsOpen} />\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;AAUO,SAAS;;IACd,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,uIAAM;IACpB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,yKAAQ,EAAC;IAErD,qBACE;;0BACE,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,0KAAI;wCAAC,MAAK;wCAAe,WAAU;kDACjC,EAAE;;;;;;kDAEL,6LAAC,0KAAI;wCAAC,MAAK;wCAAa,WAAU;kDAC/B,EAAE;;;;;;kDAEL,6LAAC,0KAAI;wCAAC,MAAK;wCAAa,WAAU;kDAC/B,EAAE;;;;;;;;;;;;;;;;;sCAIT,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,iKAAgB;;;;;8CACjB,6LAAC,+IAAM;oCAAC,SAAQ;oCAAQ,MAAK;oCAAO,SAAS,IAAM,kBAAkB;;sDACnE,6LAAC,yNAAQ;4CAAC,WAAU;;;;;;sDACpB,6LAAC;4CAAK,WAAU;sDAAW,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAKrC,6LAAC,6JAAc;gBAAC,QAAQ;gBAAgB,cAAc;;;;;;;;AAG5D;GAjCgB;;QACA,uIAAM;;;KADN","debugId":null}},
    {"offset": {"line": 1460, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/app-shell.tsx"],"sourcesContent":["\n'use client';\n\nimport { Header } from '@/components/header';\n\nexport function AppShell({ children }: { children: React.ReactNode }) {\n  return (\n    <div className=\"flex min-h-screen flex-col\">\n      <Header />\n      <main className=\"flex-1 container mx-auto py-6\">\n        {children}\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AAFA;;;AAIO,SAAS,SAAS,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;IACvB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,yIAAM;;;;;0BACP,6LAAC;gBAAK,WAAU;0BACb;;;;;;;;;;;;AAIT;KATgB","debugId":null}},
    {"offset": {"line": 1504, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/app/inventory/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { InventoryManagement } from '@/components/inventory/inventory-management';\nimport { AppShell } from '@/components/app-shell';\n\nexport default function InventoryPage() {\n  return (\n    <AppShell>\n      <InventoryManagement />\n    </AppShell>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAHA;;;;AAKe,SAAS;IACtB,qBACE,6LAAC,iJAAQ;kBACP,cAAA,6LAAC,oLAAmB;;;;;;;;;;AAG1B;KANwB","debugId":null}}]
}