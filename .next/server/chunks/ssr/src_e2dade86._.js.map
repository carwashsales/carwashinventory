{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/ui/date-range-picker.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { CalendarIcon } from 'lucide-react';\nimport { format } from 'date-fns';\nimport type { DateRange } from 'react-day-picker';\n\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\nimport { Calendar } from '@/components/ui/calendar';\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\n\ninterface DateRangePickerProps {\n  date: DateRange | undefined;\n  onSelect: (date: DateRange | undefined) => void;\n  className?: string;\n}\n\nexport function DateRangePicker({ date, onSelect, className }: DateRangePickerProps) {\n  return (\n    <div className={cn('grid gap-2', className)}>\n      <Popover>\n        <PopoverTrigger asChild>\n          <Button\n            id=\"date\"\n            variant={'outline'}\n            className={cn(\n              'w-[260px] justify-start text-left font-normal',\n              !date && 'text-muted-foreground'\n            )}\n          >\n            <CalendarIcon className=\"mr-2 h-4 w-4\" />\n            {date?.from ? (\n              date.to ? (\n                <>\n                  {format(date.from, 'LLL dd, y')} -{' '}\n                  {format(date.to, 'LLL dd, y')}\n                </>\n              ) : (\n                format(date.from, 'LLL dd, y')\n              )\n            ) : (\n              <span>Pick a date</span>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-auto p-0\" align=\"end\">\n          <Calendar\n            initialFocus\n            mode=\"range\"\n            defaultMonth={date?.from}\n            selected={date}\n            onSelect={onSelect}\n            numberOfMonths={2}\n          />\n        </PopoverContent>\n      </Popover>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAGA;AACA;AACA;AACA;AAVA;;;;;;;;AAsBO,SAAS,gBAAgB,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAwB;IACjF,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;kBAC/B,cAAA,8OAAC,8IAAO;;8BACN,8OAAC,qJAAc;oBAAC,OAAO;8BACrB,cAAA,8OAAC,4IAAM;wBACL,IAAG;wBACH,SAAS;wBACT,WAAW,IAAA,yHAAE,EACX,iDACA,CAAC,QAAQ;;0CAGX,8OAAC,8NAAY;gCAAC,WAAU;;;;;;4BACvB,MAAM,OACL,KAAK,EAAE,iBACL;;oCACG,IAAA,gKAAM,EAAC,KAAK,IAAI,EAAE;oCAAa;oCAAG;oCAClC,IAAA,gKAAM,EAAC,KAAK,EAAE,EAAE;;+CAGnB,IAAA,gKAAM,EAAC,KAAK,IAAI,EAAE,6BAGpB,8OAAC;0CAAK;;;;;;;;;;;;;;;;;8BAIZ,8OAAC,qJAAc;oBAAC,WAAU;oBAAa,OAAM;8BAC3C,cAAA,8OAAC,gJAAQ;wBACP,YAAY;wBACZ,MAAK;wBACL,cAAc,MAAM;wBACpB,UAAU;wBACV,UAAU;wBACV,gBAAgB;;;;;;;;;;;;;;;;;;;;;;AAM5B","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/dashboard/dashboard-summary.tsx"],"sourcesContent":["'use client';\n\nimport { useContext } from 'react';\nimport { AppContext, AppContextType } from '@/contexts/app-context';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\ninterface DashboardSummaryProps {\n  totalRevenue: number;\n  totalCommissions: number;\n  totalExpenses: number;\n  netProfit: number;\n}\n\nexport function DashboardSummary({ totalRevenue, totalCommissions, totalExpenses, netProfit }: DashboardSummaryProps) {\n  const { t } = useContext(AppContext) as AppContextType;\n\n  const summaryCards = [\n    { title: t('total-revenue'), value: totalRevenue.toFixed(2) },\n    { title: t('total-commissions'), value: totalCommissions.toFixed(2) },\n    { title: t('total-expenses'), value: totalExpenses.toFixed(2) },\n    { title: t('net-profit'), value: netProfit.toFixed(2) },\n  ];\n\n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      {summaryCards.map(card => (\n        <Card key={card.title}>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{card.title}</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{card.value}</div>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAaO,SAAS,iBAAiB,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,EAAE,SAAS,EAAyB;IAClH,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,mNAAU,EAAC,gJAAU;IAEnC,MAAM,eAAe;QACnB;YAAE,OAAO,EAAE;YAAkB,OAAO,aAAa,OAAO,CAAC;QAAG;QAC5D;YAAE,OAAO,EAAE;YAAsB,OAAO,iBAAiB,OAAO,CAAC;QAAG;QACpE;YAAE,OAAO,EAAE;YAAmB,OAAO,cAAc,OAAO,CAAC;QAAG;QAC9D;YAAE,OAAO,EAAE;YAAe,OAAO,UAAU,OAAO,CAAC;QAAG;KACvD;IAED,qBACE,8OAAC;QAAI,WAAU;kBACZ,aAAa,GAAG,CAAC,CAAA,qBAChB,8OAAC,wIAAI;;kCACH,8OAAC,8IAAU;wBAAC,WAAU;kCACpB,cAAA,8OAAC,6IAAS;4BAAC,WAAU;sCAAuB,KAAK,KAAK;;;;;;;;;;;kCAExD,8OAAC,+IAAW;kCACV,cAAA,8OAAC;4BAAI,WAAU;sCAAsB,KAAK,KAAK;;;;;;;;;;;;eALxC,KAAK,KAAK;;;;;;;;;;AAW7B","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/dashboard/revenue-chart.tsx"],"sourcesContent":["'use client';\n\nimport { useMemo, useContext } from 'react';\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { AppContext, AppContextType } from '@/contexts/app-context';\nimport type { Service, Expense } from '@/types';\nimport { format, eachDayOfInterval, startOfDay } from 'date-fns';\n\ninterface RevenueChartProps {\n  services: Service[];\n  expenses: Expense[];\n}\n\nexport function RevenueChart({ services, expenses }: RevenueChartProps) {\n  const { t } = useContext(AppContext) as AppContextType;\n\n  const data = useMemo(() => {\n    if (services.length === 0 && expenses.length === 0) return [];\n\n    const allDates = [\n      ...services.map(s => startOfDay(new Date(s.timestamp))),\n      ...expenses.map(e => startOfDay(new Date(e.date)))\n    ];\n    const minDate = new Date(Math.min(...allDates.map(d => d.getTime())));\n    const maxDate = new Date(Math.max(...allDates.map(d => d.getTime())));\n\n    const interval = eachDayOfInterval({ start: minDate, end: maxDate });\n\n    return interval.map(day => {\n      const dayStr = format(day, 'yyyy-MM-dd');\n      const dailyRevenue = services\n        .filter(s => format(new Date(s.timestamp), 'yyyy-MM-dd') === dayStr)\n        .reduce((acc, s) => acc + s.price, 0);\n      const dailyExpenses = expenses\n        .filter(e => format(new Date(e.date), 'yyyy-MM-dd') === dayStr)\n        .reduce((acc, e) => acc + e.amount, 0);\n\n      return {\n        date: format(day, 'MMM d'),\n        [t('revenue')]: dailyRevenue,\n        [t('expenses')]: dailyExpenses,\n      };\n    });\n  }, [services, expenses, t]);\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={350}>\n      <BarChart data={data}>\n        <XAxis dataKey=\"date\" stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} />\n        <YAxis stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} tickFormatter={(value) => `$${value}`} />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey={t('revenue')} fill=\"#3498db\" radius={[4, 4, 0, 0]} />\n        <Bar dataKey={t('expenses')} fill=\"#e74c3c\" radius={[4, 4, 0, 0]} />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AANA;;;;;;AAaO,SAAS,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAqB;IACpE,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,mNAAU,EAAC,gJAAU;IAEnC,MAAM,OAAO,IAAA,gNAAO,EAAC;QACnB,IAAI,SAAS,MAAM,KAAK,KAAK,SAAS,MAAM,KAAK,GAAG,OAAO,EAAE;QAE7D,MAAM,WAAW;eACZ,SAAS,GAAG,CAAC,CAAA,IAAK,IAAA,wJAAU,EAAC,IAAI,KAAK,EAAE,SAAS;eACjD,SAAS,GAAG,CAAC,CAAA,IAAK,IAAA,wJAAU,EAAC,IAAI,KAAK,EAAE,IAAI;SAChD;QACD,MAAM,UAAU,IAAI,KAAK,KAAK,GAAG,IAAI,SAAS,GAAG,CAAC,CAAA,IAAK,EAAE,OAAO;QAChE,MAAM,UAAU,IAAI,KAAK,KAAK,GAAG,IAAI,SAAS,GAAG,CAAC,CAAA,IAAK,EAAE,OAAO;QAEhE,MAAM,WAAW,IAAA,sKAAiB,EAAC;YAAE,OAAO;YAAS,KAAK;QAAQ;QAElE,OAAO,SAAS,GAAG,CAAC,CAAA;YAClB,MAAM,SAAS,IAAA,gKAAM,EAAC,KAAK;YAC3B,MAAM,eAAe,SAClB,MAAM,CAAC,CAAA,IAAK,IAAA,gKAAM,EAAC,IAAI,KAAK,EAAE,SAAS,GAAG,kBAAkB,QAC5D,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,KAAK,EAAE;YACrC,MAAM,gBAAgB,SACnB,MAAM,CAAC,CAAA,IAAK,IAAA,gKAAM,EAAC,IAAI,KAAK,EAAE,IAAI,GAAG,kBAAkB,QACvD,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,MAAM,EAAE;YAEtC,OAAO;gBACL,MAAM,IAAA,gKAAM,EAAC,KAAK;gBAClB,CAAC,EAAE,WAAW,EAAE;gBAChB,CAAC,EAAE,YAAY,EAAE;YACnB;QACF;IACF,GAAG;QAAC;QAAU;QAAU;KAAE;IAE1B,qBACE,8OAAC,0LAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,8OAAC,gKAAQ;YAAC,MAAM;;8BACd,8OAAC,8JAAK;oBAAC,SAAQ;oBAAO,QAAO;oBAAU,UAAU;oBAAI,UAAU;oBAAO,UAAU;;;;;;8BAChF,8OAAC,8JAAK;oBAAC,QAAO;oBAAU,UAAU;oBAAI,UAAU;oBAAO,UAAU;oBAAO,eAAe,CAAC,QAAU,CAAC,CAAC,EAAE,OAAO;;;;;;8BAC7G,8OAAC,kKAAO;;;;;8BACR,8OAAC,gKAAM;;;;;8BACP,8OAAC,0JAAG;oBAAC,SAAS,EAAE;oBAAY,MAAK;oBAAU,QAAQ;wBAAC;wBAAG;wBAAG;wBAAG;qBAAE;;;;;;8BAC/D,8OAAC,0JAAG;oBAAC,SAAS,EAAE;oBAAa,MAAK;oBAAU,QAAQ;wBAAC;wBAAG;wBAAG;wBAAG;qBAAE;;;;;;;;;;;;;;;;;AAIxE","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/dashboard/dashboard.tsx"],"sourcesContent":["'use client';\n\nimport { useContext, useMemo, useState } from 'react';\nimport type { DateRange } from 'react-day-picker';\nimport { startOfMonth, endOfMonth } from 'date-fns';\n\nimport { AppContext, AppContextType } from '@/contexts/app-context';\nimport { DateRangePicker } from '@/components/ui/date-range-picker';\nimport { DashboardSummary } from './dashboard-summary';\nimport { RevenueChart } from './revenue-chart';\n\nexport function Dashboard() {\n  const { allServices, expenses, t } = useContext(AppContext) as AppContextType;\n\n  const [date, setDate] = useState<DateRange | undefined>({\n    from: startOfMonth(new Date()),\n    to: endOfMonth(new Date()),\n  });\n\n  const filteredData = useMemo(() => {\n    const from = date?.from;\n    const to = date?.to;\n\n    if (!from || !to) {\n      return { services: [], expenses: [] };\n    }\n\n    const services = allServices.filter(s => {\n      const serviceDate = new Date(s.timestamp);\n      return serviceDate >= from && serviceDate <= to;\n    });\n    const filteredExpenses = expenses.filter(e => {\n        const expenseDate = new Date(e.date);\n        return expenseDate >= from && expenseDate <= to;\n    });\n\n    return { services, expenses: filteredExpenses };\n  }, [allServices, expenses, date]);\n\n  const totalRevenue = useMemo(() => filteredData.services.reduce((acc, s) => acc + s.price, 0), [filteredData.services]);\n  const totalCommissions = useMemo(() => filteredData.services.reduce((acc, s) => acc + s.commission, 0), [filteredData.services]);\n  const totalExpenses = useMemo(() => filteredData.expenses.reduce((acc, e) => acc + e.amount, 0), [filteredData.expenses]);\n  const netProfit = useMemo(() => totalRevenue - totalCommissions - totalExpenses, [totalRevenue, totalCommissions, totalExpenses]);\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-2xl font-bold\">{t('dashboard')}</h1>\n        <DateRangePicker\n          date={date}\n          onSelect={setDate}\n        />\n      </div>\n      <DashboardSummary \n        totalRevenue={totalRevenue}\n        totalCommissions={totalCommissions}\n        totalExpenses={totalExpenses}\n        netProfit={netProfit}\n      />\n      <div className=\"mt-8\">\n        <RevenueChart services={filteredData.services} expenses={filteredData.expenses} />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AATA;;;;;;;;AAWO,SAAS;IACd,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,IAAA,mNAAU,EAAC,gJAAU;IAE1D,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAwB;QACtD,MAAM,IAAA,4JAAY,EAAC,IAAI;QACvB,IAAI,IAAA,wJAAU,EAAC,IAAI;IACrB;IAEA,MAAM,eAAe,IAAA,gNAAO,EAAC;QAC3B,MAAM,OAAO,MAAM;QACnB,MAAM,KAAK,MAAM;QAEjB,IAAI,CAAC,QAAQ,CAAC,IAAI;YAChB,OAAO;gBAAE,UAAU,EAAE;gBAAE,UAAU,EAAE;YAAC;QACtC;QAEA,MAAM,WAAW,YAAY,MAAM,CAAC,CAAA;YAClC,MAAM,cAAc,IAAI,KAAK,EAAE,SAAS;YACxC,OAAO,eAAe,QAAQ,eAAe;QAC/C;QACA,MAAM,mBAAmB,SAAS,MAAM,CAAC,CAAA;YACrC,MAAM,cAAc,IAAI,KAAK,EAAE,IAAI;YACnC,OAAO,eAAe,QAAQ,eAAe;QACjD;QAEA,OAAO;YAAE;YAAU,UAAU;QAAiB;IAChD,GAAG;QAAC;QAAa;QAAU;KAAK;IAEhC,MAAM,eAAe,IAAA,gNAAO,EAAC,IAAM,aAAa,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,KAAK,EAAE,IAAI;QAAC,aAAa,QAAQ;KAAC;IACtH,MAAM,mBAAmB,IAAA,gNAAO,EAAC,IAAM,aAAa,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,UAAU,EAAE,IAAI;QAAC,aAAa,QAAQ;KAAC;IAC/H,MAAM,gBAAgB,IAAA,gNAAO,EAAC,IAAM,aAAa,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,MAAM,EAAE,IAAI;QAAC,aAAa,QAAQ;KAAC;IACxH,MAAM,YAAY,IAAA,gNAAO,EAAC,IAAM,eAAe,mBAAmB,eAAe;QAAC;QAAc;QAAkB;KAAc;IAEhI,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAsB,EAAE;;;;;;kCACtC,8OAAC,sKAAe;wBACd,MAAM;wBACN,UAAU;;;;;;;;;;;;0BAGd,8OAAC,2KAAgB;gBACf,cAAc;gBACd,kBAAkB;gBAClB,eAAe;gBACf,WAAW;;;;;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,mKAAY;oBAAC,UAAU,aAAa,QAAQ;oBAAE,UAAU,aAAa,QAAQ;;;;;;;;;;;;;;;;;AAItF","debugId":null}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { Dashboard } from '@/components/dashboard/dashboard';\n\nexport default function DashboardPage() {\n  return <Dashboard />;\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBAAO,8OAAC,yJAAS;;;;;AACnB","debugId":null}}]
}