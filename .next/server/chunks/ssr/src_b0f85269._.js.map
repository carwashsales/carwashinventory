{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/dashboard/dashboard.tsx"],"sourcesContent":["'use client';\n\nimport { useApp } from '@/hooks/use-app';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nexport function Dashboard() {\n  const { t, services } = useApp();\n\n  const today = new Date().toISOString().split('T')[0];\n  const dailyServices = services.filter(s => s.createdAt.startsWith(today));\n\n  const totalRevenue = dailyServices.reduce((acc, service) => acc + service.price, 0);\n  const totalCommission = dailyServices.reduce((acc, service) => acc + service.commission, 0);\n\n  const chartData = dailyServices.reduce((acc: { name: string; sales: number }[], service) => {\n    const existing = acc.find(item => item.name === service.type);\n    if (existing) {\n      existing.sales += service.price;\n    } else {\n      acc.push({ name: service.type, sales: service.price });\n    }\n    return acc;\n  }, []);\n\n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">{t('total-revenue')}</CardTitle>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            className=\"h-4 w-4 text-muted-foreground\"\n          >\n            <path d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" />\n          </svg>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{totalRevenue.toFixed(2)} {t('sar')}</div>\n          <p className=\"text-xs text-muted-foreground\">{t('daily-report-tab-title')}</p>\n        </CardContent>\n      </Card>\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">{t('total-commissions-label')}</CardTitle>\n           <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            className=\"h-4 w-4 text-muted-foreground\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"9\" cy=\"7\" r=\"4\" />\n            <path d=\"M22 21v-2a4 4 0 0 0-3-3.87\" />\n            <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" />\n          </svg>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{totalCommission.toFixed(2)} {t('sar')}</div>\n           <p className=\"text-xs text-muted-foreground\">{t('daily-report-tab-title')}</p>\n        </CardContent>\n      </Card>\n      <Card className=\"col-span-4\">\n        <CardHeader>\n          <CardTitle>{t('services-list-label')}</CardTitle>\n        </CardHeader>\n        <CardContent className=\"pl-2\">\n           <ResponsiveContainer width=\"100%\" height={350}>\n                <BarChart data={chartData}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"sales\" fill=\"#8884d8\" name={t('total-sales-label')} />\n                </BarChart>\n            </ResponsiveContainer>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;;;;;AAMO,SAAS;IACd,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,IAAA,oIAAM;IAE9B,MAAM,QAAQ,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;IACpD,MAAM,gBAAgB,SAAS,MAAM,CAAC,CAAA,IAAK,EAAE,SAAS,CAAC,UAAU,CAAC;IAElE,MAAM,eAAe,cAAc,MAAM,CAAC,CAAC,KAAK,UAAY,MAAM,QAAQ,KAAK,EAAE;IACjF,MAAM,kBAAkB,cAAc,MAAM,CAAC,CAAC,KAAK,UAAY,MAAM,QAAQ,UAAU,EAAE;IAEzF,MAAM,YAAY,cAAc,MAAM,CAAC,CAAC,KAAwC;QAC9E,MAAM,WAAW,IAAI,IAAI,CAAC,CAAA,OAAQ,KAAK,IAAI,KAAK,QAAQ,IAAI;QAC5D,IAAI,UAAU;YACZ,SAAS,KAAK,IAAI,QAAQ,KAAK;QACjC,OAAO;YACL,IAAI,IAAI,CAAC;gBAAE,MAAM,QAAQ,IAAI;gBAAE,OAAO,QAAQ,KAAK;YAAC;QACtD;QACA,OAAO;IACT,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,wIAAI;;kCACH,8OAAC,8IAAU;wBAAC,WAAU;;0CACpB,8OAAC,6IAAS;gCAAC,WAAU;0CAAuB,EAAE;;;;;;0CAC9C,8OAAC;gCACC,OAAM;gCACN,SAAQ;gCACR,MAAK;gCACL,QAAO;gCACP,eAAc;gCACd,gBAAe;gCACf,aAAY;gCACZ,WAAU;0CAEV,cAAA,8OAAC;oCAAK,GAAE;;;;;;;;;;;;;;;;;kCAGZ,8OAAC,+IAAW;;0CACV,8OAAC;gCAAI,WAAU;;oCAAsB,aAAa,OAAO,CAAC;oCAAG;oCAAE,EAAE;;;;;;;0CACjE,8OAAC;gCAAE,WAAU;0CAAiC,EAAE;;;;;;;;;;;;;;;;;;0BAGpD,8OAAC,wIAAI;;kCACH,8OAAC,8IAAU;wBAAC,WAAU;;0CACpB,8OAAC,6IAAS;gCAAC,WAAU;0CAAuB,EAAE;;;;;;0CAC7C,8OAAC;gCACA,OAAM;gCACN,SAAQ;gCACR,MAAK;gCACL,QAAO;gCACP,eAAc;gCACd,gBAAe;gCACf,aAAY;gCACZ,WAAU;;kDAEV,8OAAC;wCAAK,GAAE;;;;;;kDACR,8OAAC;wCAAO,IAAG;wCAAI,IAAG;wCAAI,GAAE;;;;;;kDACxB,8OAAC;wCAAK,GAAE;;;;;;kDACR,8OAAC;wCAAK,GAAE;;;;;;;;;;;;;;;;;;kCAGZ,8OAAC,+IAAW;;0CACV,8OAAC;gCAAI,WAAU;;oCAAsB,gBAAgB,OAAO,CAAC;oCAAG;oCAAE,EAAE;;;;;;;0CACnE,8OAAC;gCAAE,WAAU;0CAAiC,EAAE;;;;;;;;;;;;;;;;;;0BAGrD,8OAAC,wIAAI;gBAAC,WAAU;;kCACd,8OAAC,8IAAU;kCACT,cAAA,8OAAC,6IAAS;sCAAE,EAAE;;;;;;;;;;;kCAEhB,8OAAC,+IAAW;wBAAC,WAAU;kCACpB,cAAA,8OAAC,0LAAmB;4BAAC,OAAM;4BAAO,QAAQ;sCACrC,cAAA,8OAAC,gKAAQ;gCAAC,MAAM;;kDACZ,8OAAC,8KAAa;wCAAC,iBAAgB;;;;;;kDAC/B,8OAAC,8JAAK;wCAAC,SAAQ;;;;;;kDACf,8OAAC,8JAAK;;;;;kDACN,8OAAC,kKAAO;;;;;kDACR,8OAAC,gKAAM;;;;;kDACP,8OAAC,0JAAG;wCAAC,SAAQ;wCAAQ,MAAK;wCAAU,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOhE","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { Dashboard } from '@/components/dashboard/dashboard';\n\nexport default function DashboardPage() {\n  return <Dashboard />;\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBAAO,8OAAC,yJAAS;;;;;AACnB","debugId":null}}]
}