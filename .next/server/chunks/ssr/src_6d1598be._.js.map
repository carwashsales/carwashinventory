{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,4KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,iLAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,4KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/components/inventory/inventory-management.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useApp } from '@/hooks/use-app';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Trash2, Edit, Save } from 'lucide-react';\nimport { Progress } from '@/components/ui/progress';\nimport type { InventoryItem, ProductType } from '@/types';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from '@/components/ui/alert-dialog';\n\nexport function InventoryManagement() {\n  const { t, language, inventoryItems, addInventoryItem, updateInventoryItem, removeInventoryItem, productTypes, addProductType, updateProductType, removeProductType } = useApp();\n  \n  const [newProductTypeId, setNewProductTypeId] = useState('');\n  const [newItemQuantity, setNewItemQuantity] = useState('');\n  const [newItemPrice, setNewItemPrice] = useState('');\n  const [newItemLifespanDays, setNewItemLifespanDays] = useState('');\n\n  const [newProductNameAr, setNewProductNameAr] = useState('');\n  const [newProductNameEn, setNewProductNameEn] = useState('');\n  \n  const [editingItemId, setEditingItemId] = useState<string | null>(null);\n  const [editedItem, setEditedItem] = useState<InventoryItem | null>(null);\n\n  const handleAddItem = async () => {\n    if (newProductTypeId && newItemQuantity && newItemPrice) {\n      await addInventoryItem({\n        product_type_id: newProductTypeId,\n        quantity: parseInt(newItemQuantity, 10),\n        price: parseFloat(newItemPrice),\n        purchaseDate: new Date().toISOString().split('T')[0], // Set current date\n        lifespanDays: newItemLifespanDays ? parseInt(newItemLifespanDays, 10) : undefined,\n      });\n      setNewProductTypeId('');\n      setNewItemQuantity('');\n      setNewItemPrice('');\n      setNewItemLifespanDays('');\n    }\n  };\n\n  const handleAddProductType = async () => {\n    if (newProductNameEn && newProductNameAr) {\n      await addProductType(newProductNameEn, newProductNameAr);\n      setNewProductNameEn('');\n      setNewProductNameAr('');\n    }\n  };\n\n  const handleEdit = (item: InventoryItem) => {\n    setEditingItemId(item.id);\n    setEditedItem({ ...item });\n  };\n\n  const handleSave = async (id: string) => {\n    if (!editedItem) return;\n\n    await updateInventoryItem(id, {\n      product_type_id: editedItem.product_type_id,\n      quantity: editedItem.quantity,\n      price: editedItem.price,\n      purchaseDate: editedItem.purchaseDate,\n      lifespanDays: editedItem.lifespanDays,\n    });\n    setEditingItemId(null);\n    setEditedItem(null);\n  };\n\n  const calculateRemainingLifespan = (item: InventoryItem) => {\n    if (!item.purchaseDate || !item.lifespanDays) {\n      return null;\n    }\n    const purchaseDate = new Date(item.purchaseDate);\n    const today = new Date();\n    const daysPassed = (today.getTime() - purchaseDate.getTime()) / (1000 * 3600 * 24);\n    const remainingPercentage = 100 - (daysPassed / item.lifespanDays) * 100;\n    return Math.max(0, remainingPercentage);\n  };\n\n  const getProgressColor = (percentage: number) => {\n    if (percentage > 50) {\n      return 'bg-green-500';\n    }\n    if (percentage > 25) {\n      return 'bg-yellow-500';\n    }\n    return 'bg-red-500';\n  };\n\n  return (\n    <div className=\"grid gap-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>{t('inventory-management-title')}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid gap-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">{t('add-inventory-item-title')}</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-2 mb-4\">\n                <Select onValueChange={setNewProductTypeId} value={newProductTypeId}>\n                  <SelectTrigger>\n                    <SelectValue placeholder={t('select-product-type')} />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {productTypes.map((pt) => (\n                      <SelectItem key={pt.id} value={pt.id}>\n                        {language === 'ar' ? pt.name_ar : pt.name_en}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                <Input\n                  type=\"number\"\n                  placeholder={t('quantity-placeholder')}\n                  value={newItemQuantity}\n                  onChange={(e) => setNewItemQuantity(e.target.value)}\n                />\n                <Input\n                  type=\"number\"\n                  placeholder={t('price-placeholder')}\n                  value={newItemPrice}\n                  onChange={(e) => setNewItemPrice(e.target.value)}\n                />\n                <Input\n                  type=\"number\"\n                  placeholder={t('lifespan-days-placeholder')}\n                  value={newItemLifespanDays}\n                  onChange={(e) => setNewItemLifespanDays(e.target.value)}\n                />\n                <Button onClick={handleAddItem} className=\"md:col-span-3 lg:col-span-1\">{t('add-item-btn')}</Button>\n              </div>\n            </div>\n            \n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">{t('inventory-list-title')}</h3>\n              <div className=\"rounded-md border\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>{t('table-header-item')}</TableHead>\n                      <TableHead>{t('table-header-quantity')}</TableHead>\n                      <TableHead>{t('table-header-price')}</TableHead>\n                      <TableHead>{t('purchase-date-placeholder')}</TableHead>\n                      <TableHead>{t('lifespan-days-placeholder')}</TableHead>\n                      <TableHead>{t('remaining-lifespan-label')}</TableHead>\n                      <TableHead className=\"w-[100px]\">{t('actions-label')}</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {inventoryItems.length > 0 ? (\n                      inventoryItems.map((item) => {\n                        const remainingLifespan = calculateRemainingLifespan(item);\n                        return (\n                          <TableRow key={item.id}>\n                            {editingItemId === item.id && editedItem ? (\n                              <>\n                                <TableCell>{language === 'ar' ? item.productType?.name_ar : item.productType?.name_en}</TableCell>\n                                <TableCell><Input type=\"number\" value={editedItem.quantity} onChange={(e) => setEditedItem({ ...editedItem, quantity: parseInt(e.target.value) })} /></TableCell>\n                                <TableCell><Input type=\"number\" value={editedItem.price} onChange={(e) => setEditedItem({ ...editedItem, price: parseFloat(e.target.value) })} /></TableCell>\n                                <TableCell><Input type=\"date\" value={editedItem.purchaseDate} onChange={(e) => setEditedItem({ ...editedItem, purchaseDate: e.target.value })} /></TableCell>\n                                <TableCell><Input type=\"number\" value={editedItem.lifespanDays} onChange={(e) => setEditedItem({ ...editedItem, lifespanDays: parseInt(e.target.value) })} /></TableCell>\n                                <TableCell />\n                                <TableCell>\n                                  <Button variant=\"ghost\" size=\"icon\" onClick={() => handleSave(item.id)}><Save className=\"h-4 w-4\" /></Button>\n                                </TableCell>\n                              </>\n                            ) : (\n                              <>\n                                <TableCell>{language === 'ar' ? item.productType?.name_ar : item.productType?.name_en}</TableCell>\n                                <TableCell>{item.quantity}</TableCell>\n                                <TableCell>{item.price.toFixed(2)}</TableCell>\n                                <TableCell>{item.purchaseDate}</TableCell>\n                                <TableCell>{item.lifespanDays}</TableCell>\n                                <TableCell>\n                                  {remainingLifespan !== null && (\n                                    <Progress value={remainingLifespan} className={getProgressColor(remainingLifespan)} />\n                                  )}\n                                </TableCell>\n                                <TableCell>\n                                  <Button variant=\"ghost\" size=\"icon\" onClick={() => handleEdit(item)}><Edit className=\"h-4 w-4\" /></Button>\n                                  <AlertDialog>\n                                    <AlertDialogTrigger asChild>\n                                      <Button variant=\"ghost\" size=\"icon\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                    </AlertDialogTrigger>\n                                    <AlertDialogContent>\n                                      <AlertDialogHeader>\n                                        <AlertDialogTitle>{t('delete-service-type-title')}</AlertDialogTitle>\n                                        <AlertDialogDescription>{t('delete-service-type-description')}</AlertDialogDescription>\n                                      </AlertDialogHeader>\n                                      <AlertDialogFooter>\n                                        <AlertDialogCancel>{t('cancel-btn')}</AlertDialogCancel>\n                                        <AlertDialogAction onClick={() => removeInventoryItem(item.id)}>{t('delete-btn')}</AlertDialogAction>\n                                      </AlertDialogFooter>\n                                    </AlertDialogContent>\n                                  </AlertDialog>\n                                </TableCell>\n                              </>\n                            )}\n                          </TableRow>\n                        );\n                      })\n                    ) : (\n                      <TableRow>\n                        <TableCell colSpan={7} className=\"text-center\">{t('no-inventory-items-text')}</TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>{t('product-management-title')}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid gap-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">{t('add-product-type-title')}</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2 mb-4\">\n                <Input\n                  placeholder={t('product-name-en-label')}\n                  value={newProductNameEn}\n                  onChange={(e) => setNewProductNameEn(e.target.value)}\n                />\n                <Input\n                  placeholder={t('product-name-ar-label')}\n                  value={newProductNameAr}\n                  onChange={(e) => setNewProductNameAr(e.target.value)}\n                />\n                <Button onClick={handleAddProductType} className=\"md:col-span-2 lg:col-span-1\">{t('add-product-type-btn')}</Button>\n              </div>\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">{t('product-types-list-title')}</h3>\n              <div className=\"rounded-md border\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>{t('product-name-en-label')}</TableHead>\n                      <TableHead>{t('product-name-ar-label')}</TableHead>\n                      <TableHead className=\"w-[100px]\">{t('actions-label')}</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {productTypes.map((pt) => (\n                      <TableRow key={pt.id}>\n                        <TableCell>{pt.name_en}</TableCell>\n                        <TableCell>{pt.name_ar}</TableCell>\n                        <TableCell>\n                          <Button variant=\"ghost\" size=\"icon\" onClick={() => updateProductType(pt.id, pt.name_en, pt.name_ar)}><Edit className=\"h-4 w-4\" /></Button>\n                          <AlertDialog>\n                            <AlertDialogTrigger asChild>\n                              <Button variant=\"ghost\" size=\"icon\"><Trash2 className=\"h-4 w-4\" /></Button>\n                            </AlertDialogTrigger>\n                            <AlertDialogContent>\n                              <AlertDialogHeader>\n                                <AlertDialogTitle>{t('delete-service-type-title')}</AlertDialogTitle>\n                                <AlertDialogDescription>{t('delete-service-type-description')}</AlertDialogDescription>\n                              </AlertDialogHeader>\n                              <AlertDialogFooter>\n                                <AlertDialogCancel>{t('cancel-btn')}</AlertDialogCancel>\n                                <AlertDialogAction onClick={() => removeProductType(pt.id)}>{t('delete-btn')}</AlertDialogAction>\n                              </AlertDialogFooter>\n                            </AlertDialogContent>\n                          </AlertDialog>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAZA;;;;;;;;;;;;AAcO,SAAS;IACd,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,cAAc,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,YAAY,EAAE,cAAc,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,GAAG,IAAA,oIAAM;IAE9K,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAC;IACzD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAAC;IACvD,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAC;IACjD,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,IAAA,iNAAQ,EAAC;IAE/D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAC;IACzD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAC;IAEzD,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAgB;IAClE,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAuB;IAEnE,MAAM,gBAAgB;QACpB,IAAI,oBAAoB,mBAAmB,cAAc;YACvD,MAAM,iBAAiB;gBACrB,iBAAiB;gBACjB,UAAU,SAAS,iBAAiB;gBACpC,OAAO,WAAW;gBAClB,cAAc,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;gBACpD,cAAc,sBAAsB,SAAS,qBAAqB,MAAM;YAC1E;YACA,oBAAoB;YACpB,mBAAmB;YACnB,gBAAgB;YAChB,uBAAuB;QACzB;IACF;IAEA,MAAM,uBAAuB;QAC3B,IAAI,oBAAoB,kBAAkB;YACxC,MAAM,eAAe,kBAAkB;YACvC,oBAAoB;YACpB,oBAAoB;QACtB;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,iBAAiB,KAAK,EAAE;QACxB,cAAc;YAAE,GAAG,IAAI;QAAC;IAC1B;IAEA,MAAM,aAAa,OAAO;QACxB,IAAI,CAAC,YAAY;QAEjB,MAAM,oBAAoB,IAAI;YAC5B,iBAAiB,WAAW,eAAe;YAC3C,UAAU,WAAW,QAAQ;YAC7B,OAAO,WAAW,KAAK;YACvB,cAAc,WAAW,YAAY;YACrC,cAAc,WAAW,YAAY;QACvC;QACA,iBAAiB;QACjB,cAAc;IAChB;IAEA,MAAM,6BAA6B,CAAC;QAClC,IAAI,CAAC,KAAK,YAAY,IAAI,CAAC,KAAK,YAAY,EAAE;YAC5C,OAAO;QACT;QACA,MAAM,eAAe,IAAI,KAAK,KAAK,YAAY;QAC/C,MAAM,QAAQ,IAAI;QAClB,MAAM,aAAa,CAAC,MAAM,OAAO,KAAK,aAAa,OAAO,EAAE,IAAI,CAAC,OAAO,OAAO,EAAE;QACjF,MAAM,sBAAsB,MAAM,AAAC,aAAa,KAAK,YAAY,GAAI;QACrE,OAAO,KAAK,GAAG,CAAC,GAAG;IACrB;IAEA,MAAM,mBAAmB,CAAC;QACxB,IAAI,aAAa,IAAI;YACnB,OAAO;QACT;QACA,IAAI,aAAa,IAAI;YACnB,OAAO;QACT;QACA,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,wIAAI;;kCACH,8OAAC,8IAAU;kCACT,cAAA,8OAAC,6IAAS;sCAAE,EAAE;;;;;;;;;;;kCAEhB,8OAAC,+IAAW;kCACV,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAA8B,EAAE;;;;;;sDAC9C,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,4IAAM;oDAAC,eAAe;oDAAqB,OAAO;;sEACjD,8OAAC,mJAAa;sEACZ,cAAA,8OAAC,iJAAW;gEAAC,aAAa,EAAE;;;;;;;;;;;sEAE9B,8OAAC,mJAAa;sEACX,aAAa,GAAG,CAAC,CAAC,mBACjB,8OAAC,gJAAU;oEAAa,OAAO,GAAG,EAAE;8EACjC,aAAa,OAAO,GAAG,OAAO,GAAG,GAAG,OAAO;mEAD7B,GAAG,EAAE;;;;;;;;;;;;;;;;8DAM5B,8OAAC,0IAAK;oDACJ,MAAK;oDACL,aAAa,EAAE;oDACf,OAAO;oDACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;;;;;;8DAEpD,8OAAC,0IAAK;oDACJ,MAAK;oDACL,aAAa,EAAE;oDACf,OAAO;oDACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;;;;;;8DAEjD,8OAAC,0IAAK;oDACJ,MAAK;oDACL,aAAa,EAAE;oDACf,OAAO;oDACP,UAAU,CAAC,IAAM,uBAAuB,EAAE,MAAM,CAAC,KAAK;;;;;;8DAExD,8OAAC,4IAAM;oDAAC,SAAS;oDAAe,WAAU;8DAA+B,EAAE;;;;;;;;;;;;;;;;;;8CAI/E,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAA8B,EAAE;;;;;;sDAC9C,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC,0IAAK;;kEACJ,8OAAC,gJAAW;kEACV,cAAA,8OAAC,6IAAQ;;8EACP,8OAAC,8IAAS;8EAAE,EAAE;;;;;;8EACd,8OAAC,8IAAS;8EAAE,EAAE;;;;;;8EACd,8OAAC,8IAAS;8EAAE,EAAE;;;;;;8EACd,8OAAC,8IAAS;8EAAE,EAAE;;;;;;8EACd,8OAAC,8IAAS;8EAAE,EAAE;;;;;;8EACd,8OAAC,8IAAS;8EAAE,EAAE;;;;;;8EACd,8OAAC,8IAAS;oEAAC,WAAU;8EAAa,EAAE;;;;;;;;;;;;;;;;;kEAGxC,8OAAC,8IAAS;kEACP,eAAe,MAAM,GAAG,IACvB,eAAe,GAAG,CAAC,CAAC;4DAClB,MAAM,oBAAoB,2BAA2B;4DACrD,qBACE,8OAAC,6IAAQ;0EACN,kBAAkB,KAAK,EAAE,IAAI,2BAC5B;;sFACE,8OAAC,8IAAS;sFAAE,aAAa,OAAO,KAAK,WAAW,EAAE,UAAU,KAAK,WAAW,EAAE;;;;;;sFAC9E,8OAAC,8IAAS;sFAAC,cAAA,8OAAC,0IAAK;gFAAC,MAAK;gFAAS,OAAO,WAAW,QAAQ;gFAAE,UAAU,CAAC,IAAM,cAAc;wFAAE,GAAG,UAAU;wFAAE,UAAU,SAAS,EAAE,MAAM,CAAC,KAAK;oFAAE;;;;;;;;;;;sFAC/I,8OAAC,8IAAS;sFAAC,cAAA,8OAAC,0IAAK;gFAAC,MAAK;gFAAS,OAAO,WAAW,KAAK;gFAAE,UAAU,CAAC,IAAM,cAAc;wFAAE,GAAG,UAAU;wFAAE,OAAO,WAAW,EAAE,MAAM,CAAC,KAAK;oFAAE;;;;;;;;;;;sFAC3I,8OAAC,8IAAS;sFAAC,cAAA,8OAAC,0IAAK;gFAAC,MAAK;gFAAO,OAAO,WAAW,YAAY;gFAAE,UAAU,CAAC,IAAM,cAAc;wFAAE,GAAG,UAAU;wFAAE,cAAc,EAAE,MAAM,CAAC,KAAK;oFAAC;;;;;;;;;;;sFAC3I,8OAAC,8IAAS;sFAAC,cAAA,8OAAC,0IAAK;gFAAC,MAAK;gFAAS,OAAO,WAAW,YAAY;gFAAE,UAAU,CAAC,IAAM,cAAc;wFAAE,GAAG,UAAU;wFAAE,cAAc,SAAS,EAAE,MAAM,CAAC,KAAK;oFAAE;;;;;;;;;;;sFACvJ,8OAAC,8IAAS;;;;;sFACV,8OAAC,8IAAS;sFACR,cAAA,8OAAC,4IAAM;gFAAC,SAAQ;gFAAQ,MAAK;gFAAO,SAAS,IAAM,WAAW,KAAK,EAAE;0FAAG,cAAA,8OAAC,0MAAI;oFAAC,WAAU;;;;;;;;;;;;;;;;;iGAI5F;;sFACE,8OAAC,8IAAS;sFAAE,aAAa,OAAO,KAAK,WAAW,EAAE,UAAU,KAAK,WAAW,EAAE;;;;;;sFAC9E,8OAAC,8IAAS;sFAAE,KAAK,QAAQ;;;;;;sFACzB,8OAAC,8IAAS;sFAAE,KAAK,KAAK,CAAC,OAAO,CAAC;;;;;;sFAC/B,8OAAC,8IAAS;sFAAE,KAAK,YAAY;;;;;;sFAC7B,8OAAC,8IAAS;sFAAE,KAAK,YAAY;;;;;;sFAC7B,8OAAC,8IAAS;sFACP,sBAAsB,sBACrB,8OAAC,gJAAQ;gFAAC,OAAO;gFAAmB,WAAW,iBAAiB;;;;;;;;;;;sFAGpE,8OAAC,8IAAS;;8FACR,8OAAC,4IAAM;oFAAC,SAAQ;oFAAQ,MAAK;oFAAO,SAAS,IAAM,WAAW;8FAAO,cAAA,8OAAC,mNAAI;wFAAC,WAAU;;;;;;;;;;;8FACrF,8OAAC,0JAAW;;sGACV,8OAAC,iKAAkB;4FAAC,OAAO;sGACzB,cAAA,8OAAC,4IAAM;gGAAC,SAAQ;gGAAQ,MAAK;0GAAO,cAAA,8OAAC,oNAAM;oGAAC,WAAU;;;;;;;;;;;;;;;;sGAExD,8OAAC,iKAAkB;;8GACjB,8OAAC,gKAAiB;;sHAChB,8OAAC,+JAAgB;sHAAE,EAAE;;;;;;sHACrB,8OAAC,qKAAsB;sHAAE,EAAE;;;;;;;;;;;;8GAE7B,8OAAC,gKAAiB;;sHAChB,8OAAC,gKAAiB;sHAAE,EAAE;;;;;;sHACtB,8OAAC,gKAAiB;4GAAC,SAAS,IAAM,oBAAoB,KAAK,EAAE;sHAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+DAtClE,KAAK,EAAE;;;;;wDA+C1B,mBAEA,8OAAC,6IAAQ;sEACP,cAAA,8OAAC,8IAAS;gEAAC,SAAS;gEAAG,WAAU;0EAAe,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAWpE,8OAAC,wIAAI;;kCACH,8OAAC,8IAAU;kCACT,cAAA,8OAAC,6IAAS;sCAAE,EAAE;;;;;;;;;;;kCAEhB,8OAAC,+IAAW;kCACV,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAA8B,EAAE;;;;;;sDAC9C,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,0IAAK;oDACJ,aAAa,EAAE;oDACf,OAAO;oDACP,UAAU,CAAC,IAAM,oBAAoB,EAAE,MAAM,CAAC,KAAK;;;;;;8DAErD,8OAAC,0IAAK;oDACJ,aAAa,EAAE;oDACf,OAAO;oDACP,UAAU,CAAC,IAAM,oBAAoB,EAAE,MAAM,CAAC,KAAK;;;;;;8DAErD,8OAAC,4IAAM;oDAAC,SAAS;oDAAsB,WAAU;8DAA+B,EAAE;;;;;;;;;;;;;;;;;;8CAGtF,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAA8B,EAAE;;;;;;sDAC9C,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC,0IAAK;;kEACJ,8OAAC,gJAAW;kEACV,cAAA,8OAAC,6IAAQ;;8EACP,8OAAC,8IAAS;8EAAE,EAAE;;;;;;8EACd,8OAAC,8IAAS;8EAAE,EAAE;;;;;;8EACd,8OAAC,8IAAS;oEAAC,WAAU;8EAAa,EAAE;;;;;;;;;;;;;;;;;kEAGxC,8OAAC,8IAAS;kEACP,aAAa,GAAG,CAAC,CAAC,mBACjB,8OAAC,6IAAQ;;kFACP,8OAAC,8IAAS;kFAAE,GAAG,OAAO;;;;;;kFACtB,8OAAC,8IAAS;kFAAE,GAAG,OAAO;;;;;;kFACtB,8OAAC,8IAAS;;0FACR,8OAAC,4IAAM;gFAAC,SAAQ;gFAAQ,MAAK;gFAAO,SAAS,IAAM,kBAAkB,GAAG,EAAE,EAAE,GAAG,OAAO,EAAE,GAAG,OAAO;0FAAG,cAAA,8OAAC,mNAAI;oFAAC,WAAU;;;;;;;;;;;0FACrH,8OAAC,0JAAW;;kGACV,8OAAC,iKAAkB;wFAAC,OAAO;kGACzB,cAAA,8OAAC,4IAAM;4FAAC,SAAQ;4FAAQ,MAAK;sGAAO,cAAA,8OAAC,oNAAM;gGAAC,WAAU;;;;;;;;;;;;;;;;kGAExD,8OAAC,iKAAkB;;0GACjB,8OAAC,gKAAiB;;kHAChB,8OAAC,+JAAgB;kHAAE,EAAE;;;;;;kHACrB,8OAAC,qKAAsB;kHAAE,EAAE;;;;;;;;;;;;0GAE7B,8OAAC,gKAAiB;;kHAChB,8OAAC,gKAAiB;kHAAE,EAAE;;;;;;kHACtB,8OAAC,gKAAiB;wGAAC,SAAS,IAAM,kBAAkB,GAAG,EAAE;kHAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+DAhB1D,GAAG,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgC1C","debugId":null}},
    {"offset": {"line": 1090, "column": 0}, "map": {"version":3,"sources":["file:///home/user/carwash/src/app/inventory/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { InventoryManagement } from '@/components/inventory/inventory-management';\n\nexport default function InventoryPage() {\n  return <InventoryManagement />;\n}\n"],"names":[],"mappings":";;;;;AAGA;AAFA;;;AAIe,SAAS;IACtB,qBAAO,8OAAC,iLAAmB;;;;;AAC7B","debugId":null}}]
}